name: Django Tests

on:
  workflow_run:
    workflows: ["Lint"]
    types:
      - completed
    branches: [ main ]


env:
  PYTHON_VERSION: '3.13'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests

    services:
      postgres:
        image: postgres:17.5
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev

# Ustawienie zmiennych środowiskowych
# Poczekanie na postgres dla pewności
# Uruchomienie testów z covergae
# Upload coverage HTML
# Collect logów
# Test summary
# Upload CodeCov (Optional)